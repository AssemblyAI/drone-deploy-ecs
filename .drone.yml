---
kind: pipeline
name: ci

platform:
  os: linux
  arch: amd64

node:
  os: linux
  class: standard

trigger:
  event:
  - pull_request

volumes:
- name: docker-socket
  host:
    path: /var/run/docker.sock

steps:
- name: unit-tests
  image: golang:1.16.3
  pull: if-not-present
  commands:
  - go test -v ./cmd/plugin
  - go test -v ./pkg/deploy

- name: build-amd64-binary
  image: golang:1.16.3
  pull: if-not-present
  commands:
  - bash build/linux_amd64.sh

- name: build-amd64-image
  image: public.ecr.aws/assemblyai/docker:latest
  pull: if-not-present
  commands:
  - docker build -t drone-deploy-ecs:${DRONE_COMMIT_SHA} .
  volumes:
  - name: docker-socket
    path: /var/run/docker.sock
  
- name: cleanup
  image: public.ecr.aws/assemblyai/docker:latest
  pull: if-not-present
  commands:
  - docker rmi --force drone-deploy-ecs:${DRONE_COMMIT_SHA}
  volumes:
  - name: docker-socket
    path: /var/run/docker.sock
---
kind: pipeline
name: publish

platform:
  os: linux
  arch: amd64

node:
  os: linux
  class: standard

trigger:
  event:
  - tag

volumes:
- name: docker-socket
  host:
    path: /var/run/docker.sock

steps:
- name: build-amd64-binary
  image: golang:1.16.3
  pull: if-not-present
  commands:
  - bash build/linux_amd64.sh

- name: build-push-amd64-image
  image: public.ecr.aws/assemblyai/docker:latest
  pull: if-not-present
  commands:
  - aws ecr-public get-login-password | docker login --username AWS --password-stdin $REPO
  - docker build -t $REPO:amd64-${DRONE_COMMIT_SHA} -t $REPO:amd64-$DRONE_TAG -t $REPO:$DRONE_TAG -t $REPO:latest -t $REPO:amd64-latest .
  - docker push $REPO:amd64-${DRONE_COMMIT_SHA}
  - docker push $REPO:$DRONE_TAG
  - docker push $REPO:amd64-$DRONE_TAG
  - docker push $REPO:latest
  - docker push $REPO:amd64-latest
  volumes:
  - name: docker-socket
    path: /var/run/docker.sock
  environment:
    REPO: public.ecr.aws/assemblyai/drone-deploy-ecs
    AWS_DEFAULT_REGION: us-east-1